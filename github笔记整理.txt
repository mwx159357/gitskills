初始化仓库:Git init  
添加文件到仓库，分两步:
Git add <filename>  
Git commit -m 'message' 
掌握仓库的状态：Git status 
查看修改内容：Git diff <filename> 
查看提交日志：Git log  
格式化查看：Git log --pretty=oneline  
回退：
Git reset --hard HEAD^
git reset  --hard 版本号
记录命令：Git reflog
克隆远程库：git clone git@github.com:michaelliao/gitskills.git

git checkout -b dev ：创建分支dev,并切换到dev分支；
git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：
a、git branch dev 创建分支；
bgit checkout dev 切换到dev分支；
git branch 查看分支，当前分支前面会标一个*号。
git merge dev 合并，dev分支的工作成果合并到master分支上；
git branch -d dev 删除分支dev；
git log --graph --pretty=oneline --abbrev-commit ；
git merge --no-ff -m '备注' dev  合并分支时，
加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并；


增加/删除文件
================================================================
git add [file1][file2]..... #添加指定文件到暂存区
git add [dir]  #添加制定目录到暂存区
git add .   #添加当前目录的搜友文件到暂存区
git add -p  #添加每个变化前，都会要求确认，对于同一个文件的多处变化，可以实现粉刺提交
git rm [file1][file2]...  #删除工作区文件，并且将这次删除放入暂存区
git rm --cached[file]   #停止追踪指定文件，但该文件会保留在工作区
git mv [file-origin] [file-renamed]   #改名文件，并且将这个改名放入暂存区


代码提交
===================================================================
git commit -m [message]  #提交暂存区到仓库区
git commit [file1] [file2] .... -m [message]  #提交暂存区的指定文件到仓库区
git commit -a #提交工作区自上次commit之后的变化，直接到仓库区
git commit -v #提交时显示所有diff信息
git commit --amend -m[message] #使用一次新的commit，替代上一次提交，如果代码没有任何新变化，则用来改写上一次commit的提交信息
git commit --amend [file1] [file2].... #重做上一次commit，并包括指定文件的新变化


分支
=====================================================================
git branch  #列出本地分支
git branch -r #列出所有远程分支
git branch -a #列出所有本地分支和远程分支
git branch [branch-name]   #新建一个分支，但依然停留在当前分支
git checkout -b [branch-name]  #新建一个分支，并切换:到该分支
git branch [branch] [commit]   #新建一个分支，指向指定commit
git branch --track [branch] [remote-branch] #新建一个分支，与制定的远程分支建立追踪关系
git checkout [branch-name]  #切换到指定分支，并更新工作区
git checkout - #切换到上一个分支
git branch --set-upstream [branch] [remote-branch] #建立追踪关系，在现有分支与指定的远程分支之间
git merge [branch]  #合并指定分支到当前分支
git cherry-pick [commit]  #选择一个commit，合并进当前分支
git branch -d [branch-name]  #删除分支
git push origin --delete [branch] 
git branch -dr [remote/branch]  #删除远程分支













===================================================================
gitlab.hzfanews.com

http://gitlab.hzfanews.com/fw-testcode/archiveDataMining.git

账号：yfb_mwx
密码：maweixin7890



GITHUB账号：mwx159357
密码：maweixin159357
https://github.com/mwx159357/maweixin.git
